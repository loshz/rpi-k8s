---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  ports:
  - name: http
    port: 80
    targetPort: 3000
  selector:
    app: grafana
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  serviceName: grafana
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      terminationGracePeriodSeconds: 30
      initContainers:
      - name: grafana-volume-ownership
        image: busybox
        # This is necessary to give the grafana user permissions to store
        # data in the mounted volume which is originally owned by root.
        # 472 is grafana user (https://github.com/grafana/grafana-docker/blob/master/Dockerfile)
        command: ["sh", "-c", "chown -R 472:472 /var/lib/grafana"]
        volumeMounts:
        - name: data
          mountPath: /var/lib/grafana
      containers:
      - name: grafana
        image: grafana/grafana:5.2.4
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: 500M
        ports:
        - containerPort: 3000
          name: http
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 30
        volumeMounts:
        - name: data
          mountPath: /var/lib/grafana
        - name: config
          mountPath: /etc/grafana
      volumes:
      - configMap:
          items:
          - key: grafana.ini
            path: grafana.ini
          - key: datasources.yaml
            path: provisioning/datasources/datasources.yaml            
          name: grafana
        name: config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      storageClassName: default
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: grafana
  labels:
    app: grafana
data:
  grafana.ini: |-
    instance_name = grafana

    [server]
    domain = metrics.platform.avct.io
    root_url = https://metrics.platform.avct.io

    [security]
    admin_user = admin
    admin_password = [PASSWORD]

    [users]
    auto_assign_org = true
    auto_assign_org_id = 1
    auto_assign_org_role = Viewer

    [auth]
    disable_login_form = false

    [auth.anonymous]
    enabled = false

    [auth.basic]
    enabled = false

    [auth.google]
    enabled = true
    client_id = [CLIENT ID]
    client_secret = [CLIENT SECRET]
    scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
    auth_url = https://accounts.google.com/o/oauth2/auth
    token_url = https://accounts.google.com/o/oauth2/token
    allowed_domains = avocet.io
    allow_sign_up = true

  datasources.yaml: |-
    apiVersion: 1
    datasources:
    - name: eu-west-1-production-utility.platform.avct.io
      type: influxdb
      access: proxy
      orgId: 1
      url: http://influxdb.eu-west-1-production-utility.platform.avct.io:8086/
      user: grafana
      password: [PASSWORD]
      database: metrics
      isDefault: false
      basicAuth: true
      basicAuthUser: grafana
      basicAuthPassword: [PASSWORD]
      jsonData:
        timeInterval: "10s"
      version: 1
      editable: false
